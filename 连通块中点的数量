import java.util.Scanner;

public class Main {
    static final int N=100010;

    static int[] p = new int[N];
    static int[] size = new int[N];

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();

        for (int i=1;i<=n;i++){
            p[i]=i;
            size[i]=1;              //多定义一个数组，用来表示当前所属集合的数量
        }

        for (int i=0;i<m;i++){
            String op = scanner.next();
            if (op.equals("C")){
                int a = scanner.nextInt();
                int b = scanner.nextInt();
                if (find(a)==find(b))continue;              //此处要注意，如果两者同属于一个集合，就不需要合并，更不需要合并集合的大小
                size[find(b)]+=size[find(a)];               //因为最终会实现每个节点的父节点都是其祖宗节点，所以只需要及时计算并保存祖宗节点的大小
                p[find(a)]=find(b);
            }else if(op.equals("Q1")){
                int a = scanner.nextInt();
                int b = scanner.nextInt();
                if (find(a)==find(b)){
                    System.out.println("Yes");
                }else{
                    System.out.println("No");
                }
            }else if(op.equals("Q2")){
                int a = scanner.nextInt();
                System.out.println(size[find(a)]);
            }
        }
    }

    private static int find(int b) {
        if (p[b]!=b)p[b]=find(p[b]);
        return p[b];
    }


}
